class Solution {
    public void nextPermutation(int[] nums) {
        int ind1 = -1;
        int ind2 = -1;

        //find breakpoint
        for(int i=nums.length-2 ; i>=0 ; i--){
            if(nums[i]  < nums[i+1]){
                ind1 = i;
                break;
            }
        }

        if(ind1 == -1){
            reverse(nums,0);
        }
        else{
            for(int i=nums.length-1;i>=0;i--){
                if(nums[i] > nums[ind1]){
                    ind2 = i;
                    break; 
                }
            }
            swap(nums,ind1,ind2);
            reverse(nums,ind1+1);
        }

    }

    private void swap(int[] nums,int a, int b){
         int temp = nums[a];
         nums[a] = nums[b];
         nums[b] = temp;
    }

    private void reverse(int[] nums,int start){
        int i = start;
        int j = nums.length-1;
        while(i<j){
            swap(nums,i,j);
            i++;
            j--;
        }
    }
}
